#include <iostream>
#include <bits/stdc++.h>
using namespace std;
int main()
{
    int edges, vertex, src;
    cout << "Enter the number of edges: " << endl;
    cin >> edges;
    cout << "Enter the number of nodes: " << endl;
    cin >> vertex;
    vector<vector<int>> adj;
    for (int i = 0; i < edges; i++)
    {
        int u, v, w;
	  cin >> u >> v >> w;
        adj.push_back({u, v, w});
    }
    cout << "Enter the source: " << endl;
    cin >> src;
    vector<int> distTo(vertex + 1, INT_MAX);
    distTo[src] = 0;
    for (int i = 1; i < vertex; i++)
    {
        for (auto e : adj)
        {
            int u = e[0];
            int v = e[1];
            int w = e[2];
            distTo[v] = min(distTo[v], w + distTo[u]);
        }
    }

    int flag = 0;
    for (auto e : adj)
    {
        int u = e[0];
        int v = e[1];
        int w = e[2];
        if (distTo[v] > w + distTo[u])
        {
            flag = 1;
            cout << "Negative cycle exist. " << endl;
            break;
        }
    }
    if (flag == 0)
    {
        for (auto i : distTo)
        {
            cout << i;
        }
    }
}
